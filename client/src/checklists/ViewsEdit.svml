{
import * as Models from './Models';
import { AdminMode, Modal, Input, SimpleHeader, AddText } from '../Components';
}

NewChecklist[modal-inner col]
  #title:h2 'New Checklist'
  #textInput:Input({ twoway: false })[col-nofill]
  #footer[col-fill]
    .style { margin: 1em 0; }
    #addBtn:button 'Create Checklist'
      onClick() {
        let name = this.textInput.value().trim();
        if(!name.length) {
          alert('Name is required.');
          return;
        }
        let item = {
          name: name,
          groups: {}
        };
        this.data.setItem(item);
        this.textInput.clear();
        this.emit('hide');
      }
    #cancelBtn:button 'Cancel' onClick() { this.emit('hide'); }


EditChecklist<Models.List>[modal-inner col]
  #title:h2 'Edit Checklist'
  #textInput:Input({ label: 'Checklist Name:', key: 'name' })[col-nofill] $data
    .style { background-color: #DDF; padding: 4px; }
  #groupsContainer
    .style { margin-left: 1em; margin-top: 1em; }
    #groups:SyncList({ item: Group }) $data.groups
    #addNew[row]
      .style { background-color: #DFF; padding: 4px; }
      #titleAddgroup[row-nofill] 'Add Group:'
      #addGroup:AddText[row-fill]
        onAdd(text: string) {
          let group = {
            name: text,
            items: {}
          };
          this.data.groups.setItem(group);
          this.addGroup.clear();
      }
  #footer[col-fill]
    .style { margin: 1em 0; }
    #deleteBtn:button 'Delete' 
      onClick() { 
        if(confirm('Delete Checklist?')) {
          this.data.parent.remove(this.data.key);
          this.emit('hide'); 
        }
      }
    #closeBtn:button 'Close' onClick() { this.emit('hide'); }

Group<Models.Group>
  #header[row]
    .style { background-color: #DDF; padding: 4px; }
    #textInput:Input({ label: 'Group:', key: 'name' })[col-nofill] $data
  #items:SyncList({ item: Item }) $data.items
    .style { margin-left: 1em; }
  #addNew[row]
    .style2 { margin-left: 1em; background-color: #FDF; padding: 4px; }
    #titleAdd[row-nofill] 'Add Item:'
    #addItem:AddText[row-fill]
      onAdd(text: string) {
        let item = {
          name: text
        };
        this.data.items.setItem(item);
        this.addItem.clear();
    }

Item<Models.Item>[row]
  .style { padding: 8px; border: 1px solid #777; }
  #name:Input({ key: 'name' })[row-fill] $data
  #deleteBtn:button[material-icons] 'delete' 
    onClick() { 
      this.data.parent.remove(this.data.key);
    }
